name: Build Dev Packages

on:
  workflow_dispatch:
  repository_dispatch:
    types: [dev]

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    name: Build ${{ matrix.arch }}-${{ matrix.tag }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
          - x86_64
        tag:
          - SNAPSHOT

    steps:
      # Шаг 1. Клонирование репозитория
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Шаг 2. Загрузка исходников и настройка зависимостей
      - name: Download Source
        run: |
          # Клонирование исходников curl
          git clone https://github.com/sbwml/feeds_packages_net_curl curl
          # Включение OpenSSL
          sed -i 's/default LIBCURL_MBEDTLS/default LIBCURL_OPENSSL/g' curl/Config.in
          # Временно отключаем QUIC и HTTP/3 для отладки
          sed -i '/config LIBCURL_NGHTTP3/,+3 s/default y/default n/' curl/Config.in
          sed -i '/config LIBCURL_OPENSSL_QUIC/,+3 s/default y/default n/' curl/Config.in
          # Версия curl
          curl_version=$(grep -Po '(?<=PKG_VERSION:=).*' curl/Makefile)
          echo "curl_version=$curl_version" >> "$GITHUB_ENV"
          # Клонирование зависимостей
          git clone https://github.com/sbwml/package_libs_nghttp3 nghttp3
          git clone https://github.com/sbwml/package_libs_openssl -b openssl-3.2 openssl

      # Шаг 3. Отладка окружения
      - name: Debug Build Environment
        run: |
          echo "=== Окружение ==="
          env
          echo "=== Структура директорий ==="
          ls -R
          echo "=== Содержимое curl/Config.in ==="
          cat curl/Config.in
          echo "=== Содержимое curl/Makefile ==="
          cat curl/Makefile

      # Шаг 4. Сборка пакетов
      - name: Build Packages
        uses: sbwml/openwrt-gh-action-sdk@curl
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.tag }}
          FEEDNAME: packages_ci
          PACKAGES: curl
          NO_REFRESH_CHECK: true
          IGNORE_ERRORS: false

      # Шаг 5. Отладка ошибок сборки (если произошла ошибка)
      - name: Debug Build Logs
        if: failure()
        run: |
          echo "=== Ошибка сборки. Логи: ==="
          cat logs/* || echo "Логи не найдены"

      # Шаг 6. Создание архива
      - name: Create compress files
        run: |
          tar -zcvf curl-${{ env.curl_version }}-${{ matrix.arch }}.tar.gz -C bin/packages/${{ matrix.arch }}/ packages_ci

      # Шаг 7. Публикация артефактов
      - name: Release packages
        uses: ncipollo/release-action@v1
        with:
          name: curl-${{ env.curl_version }}-openssl-quic
          commit: main
          tag: ${{ env.curl_version }}-openssl-quic
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          replacesArtifacts: true
          prerelease: true
          artifacts: "curl-${{ env.curl_version }}-${{ matrix.arch }}.tar.gz"
